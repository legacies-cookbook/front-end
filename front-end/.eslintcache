[{"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\index.js":"1","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\App.js":"2","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\UpdateRecipe.js":"3","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\RecipeCard.js":"4","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\data.js":"5"},{"size":252,"mtime":1612235344513,"results":"6","hashOfConfig":"7"},{"size":203,"mtime":1612235387151,"results":"8","hashOfConfig":"7"},{"size":3074,"mtime":1612234967614,"results":"9","hashOfConfig":"7"},{"size":1242,"mtime":1612235344466,"results":"10","hashOfConfig":"7"},{"size":8337,"mtime":1612235344468,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2xzi2s",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\index.js",[],"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\App.js",[],"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\UpdateRecipe.js",["25","26"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport './UpdateRecipe.css';\r\n\r\nconst initialState = {\r\n  title: '',\r\n  source: '',\r\n  ingredients: '',\r\n  instructions: '',\r\n  category: ''\r\n};\r\n\r\nconst UpdateRecipe = (props) => {\r\n  const [formState, setFormState] = useState(initialState);\r\n  // const { id } = useParams();\r\n  // const { push } = useHistory();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('')\r\n      .then(res => {\r\n        console.log(res);\r\n        setFormState(res.data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  const handleChanges = e => {\r\n    e.persist();\r\n    setFormState({ ...formState, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const submitForm = e => {\r\n    e.preventDefault();\r\n    axios\r\n      .put('', formState)\r\n      .then(res => {\r\n        console.log('Submitting edits: ', res)\r\n        // setList(\r\n        //   list.map(recipe => {\r\n        //     if(recipe.id === res.data.id) {\r\n        //       return res.data\r\n        //     } else {\r\n        //       return recipe\r\n        //     }\r\n        //   })\r\n        // );\r\n        setFormState(initialState);\r\n        // push('/');\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div className='update-div'>\r\n      <h2>Update Recipe</h2>\r\n      <form onSubmit={submitForm} className='update-form'>\r\n        <input\r\n          type='text'\r\n          name='title'\r\n          className='update-form-fields'\r\n          id='update-title'\r\n          placeholder='Title'\r\n          value={formState.title}\r\n          onChange={handleChanges}\r\n        />\r\n        <input\r\n          type='text'\r\n          name='source'\r\n          className='update-form-fields'\r\n          id='update-source'\r\n          placeholder='Source'\r\n          value={formState.source}\r\n          onChange={handleChanges}\r\n        />\r\n        <textarea\r\n          type='textarea'\r\n          name='ingredients'\r\n          className='update-form-fields'\r\n          placeholder='Ingredients'\r\n          value={formState.ingredients}\r\n          onChange={handleChanges}\r\n        />\r\n        <textarea\r\n          type='textarea'\r\n          name='instructions'\r\n          className='update-form-fields'\r\n          placeholder='Instructions'\r\n          value={formState.instructions}\r\n          onChange={handleChanges}\r\n        />\r\n        <select name='category' className='update-form-fields' id='category' >\r\n          <option disabled selected>--Select a Category--</option>\r\n          <option value='Breakfast'>Breakfast</option>\r\n          <option value='Lunch'>Lunch</option>\r\n          <option value='Dinner'>Dinner</option>\r\n          <option value='Dessert'>Dessert</option>\r\n          <option value='Gluten Free'>Gluten Free</option>\r\n          <option value='Vegetarian'>Vegetarian</option>\r\n        </select>\r\n        <button className='update-form-fields' id='update-button'>Save Edits</button>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UpdateRecipe;",["27","28"],"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\RecipeCard.js",["29"],"import React from 'react';\r\nimport data from \"./data\";\r\n\r\nfunction RecipeCard() {\r\n\r\n\r\n    const recipe = data[1];\r\n    console.log(recipe);\r\n\r\n    return (\r\n        <div className=\"recipeCard\">\r\n            <div className=\"recipeCard__top\">\r\n                <div className={recipe.type}>\r\n                    <h2>{recipe.type}</h2>\r\n                </div>\r\n                <h1>{recipe.title}</h1>\r\n            </div>\r\n            <div className=\"recipeCard__body\">\r\n                <img src={recipe.photo} alt=\"recipe photo\"/>\r\n                <div className=\"recipeCard__body__info\">\r\n                    <h3>Ingredients</h3>\r\n                    {recipe.ingredients.map(ingredient => {\r\n                        return <p>{ingredient}</p>\r\n                    })}\r\n                    <h3>Instructions</h3>\r\n                    {recipe.instructions.map(step => {\r\n                        return (\r\n                            <div className=\"recipeCard__body_step\">\r\n                                <p><strong>{step.step})</strong> {step.instructions}</p>\r\n                            </div>\r\n                    )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeCard\r\n","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\data.js",[],{"ruleId":"30","severity":1,"message":"31","line":3,"column":10,"nodeType":"32","messageId":"33","endLine":3,"endColumn":19},{"ruleId":"30","severity":1,"message":"34","line":3,"column":21,"nodeType":"32","messageId":"33","endLine":3,"endColumn":31},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":19,"column":17,"nodeType":"41","endLine":19,"endColumn":61},"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","no-native-reassign",["42"],"no-negated-in-lhs",["43"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]