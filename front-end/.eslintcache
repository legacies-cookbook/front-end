[{"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\index.js":"1","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\App.js":"2","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\UpdateRecipe.js":"3"},{"size":174,"mtime":1612231490188,"results":"4","hashOfConfig":"5"},{"size":118,"mtime":1612231510946,"results":"6","hashOfConfig":"5"},{"size":2780,"mtime":1612231490187,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2xzi2s",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\index.js",[],"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\App.js",[],"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\UpdateRecipe.js",["16","17"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nconst initialState = {\r\n  title: '',\r\n  source: '',\r\n  ingredients: '',\r\n  instructions: '',\r\n  category: ''\r\n};\r\n\r\nconst UpdateRecipe = (props) => {\r\n  const [formState, setFormState] = useState(initialState);\r\n  // const { id } = useParams();\r\n  // const { push } = useHistory();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('')\r\n      .then(res => {\r\n        console.log(res);\r\n        setFormState(res.data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  const handleChanges = e => {\r\n    e.persist();\r\n    setFormState({ ...formState, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const submitForm = e => {\r\n    e.preventDefault();\r\n    axios\r\n      .put('', formState)\r\n      .then(res => {\r\n        console.log('Submitting edits: ', res)\r\n        // setList(\r\n        //   list.map(recipe => {\r\n        //     if(recipe.id === res.data.id) {\r\n        //       return res.data\r\n        //     } else {\r\n        //       return recipe\r\n        //     }\r\n        //   })\r\n        // );\r\n        setFormState(initialState);\r\n        // push('/');\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div className='update-form'>\r\n      <h2>Update Recipe</h2>\r\n      <form onSubmit={submitForm}>\r\n        <input\r\n          type='text'\r\n          name='title'\r\n          placeholder='Title'\r\n          value={formState.title}\r\n          onChange={handleChanges}\r\n        />\r\n        <input\r\n          type='text'\r\n          name='source'\r\n          placeholder='Source'\r\n          value={formState.source}\r\n          onChange={handleChanges}\r\n        />\r\n        <input\r\n          type='text'\r\n          name='ingredients'\r\n          placeholder='Ingredients'\r\n          value={formState.ingredients}\r\n          onChange={handleChanges}\r\n        />\r\n        <input\r\n          type='textarea'\r\n          name='instructions'\r\n          placeholder='Instructions'\r\n          value={formState.instructions}\r\n          onChange={handleChanges}\r\n        />\r\n        <select name='category' id='category' >\r\n          <option value='' disabled selected>Select a Category</option>\r\n          <option value='' selected='selected'>Breakfast</option>\r\n          <option value='' selected='selected'>Lunch</option>\r\n          <option value='' selected='selected'>Dinner</option>\r\n          <option value='' selected='selected'>Dessert</option>\r\n          <option value='' selected='selected'>Gluten Free</option>\r\n          <option value='' selected='selected'>Vegetarian</option>\r\n        </select>\r\n        <button>Save Edits</button>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UpdateRecipe;",["18","19"],{"ruleId":"20","severity":1,"message":"21","line":3,"column":10,"nodeType":"22","messageId":"23","endLine":3,"endColumn":19},{"ruleId":"20","severity":1,"message":"24","line":3,"column":21,"nodeType":"22","messageId":"23","endLine":3,"endColumn":31},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","no-native-reassign",["29"],"no-negated-in-lhs",["30"],"no-global-assign","no-unsafe-negation"]