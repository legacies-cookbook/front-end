[{"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\index.js":"1","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\App.js":"2","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\UpdateRecipe.js":"3","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\Registration.js":"4","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\utils\\PrivateRoute.js":"5","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\RecipeList.js":"6","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\Login.js":"7","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\data.js":"8","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\RecipeListCard.js":"9","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\reducers\\recipeReducer.js":"10","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\reducers\\userReducer.js":"11","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\constants\\recipeConstants.js":"12","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\constants\\userConstants.js":"13","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\actions\\UserActions.js":"14","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\actions\\RecipeActions.js":"15","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\utils\\axiosWithAuth.js":"16","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\AddRecipe.js":"17","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\store.js":"18","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\RecipeCard.js":"19"},{"size":304,"mtime":1612493205350,"results":"20","hashOfConfig":"21"},{"size":1649,"mtime":1612669713802,"results":"22","hashOfConfig":"21"},{"size":2568,"mtime":1612406630373,"results":"23","hashOfConfig":"21"},{"size":4469,"mtime":1612657003163,"results":"24","hashOfConfig":"21"},{"size":434,"mtime":1611797324038,"results":"25","hashOfConfig":"21"},{"size":1848,"mtime":1612657003162,"results":"26","hashOfConfig":"21"},{"size":3250,"mtime":1612668236304,"results":"27","hashOfConfig":"21"},{"size":8337,"mtime":1612235344468,"results":"28","hashOfConfig":"21"},{"size":770,"mtime":1612670302435,"results":"29","hashOfConfig":"21"},{"size":2511,"mtime":1612657003164,"results":"30","hashOfConfig":"21"},{"size":995,"mtime":1612398860838,"results":"31","hashOfConfig":"21"},{"size":929,"mtime":1612398860836,"results":"32","hashOfConfig":"21"},{"size":362,"mtime":1612398860836,"results":"33","hashOfConfig":"21"},{"size":1426,"mtime":1612493205345,"results":"34","hashOfConfig":"21"},{"size":3713,"mtime":1612668757530,"results":"35","hashOfConfig":"21"},{"size":278,"mtime":1612493205352,"results":"36","hashOfConfig":"21"},{"size":2926,"mtime":1612657003159,"results":"37","hashOfConfig":"21"},{"size":1081,"mtime":1612657003165,"results":"38","hashOfConfig":"21"},{"size":1520,"mtime":1612670813407,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"2xzi2s",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\index.js",[],["85","86"],"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\App.js",[],"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\UpdateRecipe.js",["87"],"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\Registration.js",["88"],"import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { register } from '../actions/UserActions';\r\n\r\n\r\nconst validate = values => {\r\n  const errors = {};\r\n \r\n    if (!values.username) {\r\n      errors.username = 'username required';\r\n    } else if (values.username.length < 6) {\r\n      errors.username = 'Username must be at least 6 characters';\r\n    }\r\n \r\n    if (!values.password) {\r\n      errors.password = 'password required';\r\n    } else if (values.password.length < 6) {\r\n      errors.password = 'Password must be at least 6 characters';\r\n    }\r\n \r\n    if (!values.email) {\r\n      errors.email = 'email required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n      errors.email = 'Invalid email address';\r\n    }\r\n\r\n    if (!values.tos) {\r\n      errors.tos = 'You must accept the terms of service';\r\n    } else if (values.tos.boolean === false) {\r\n      errors.tos = '';\r\n    }\r\n \r\n   return errors;\r\n}\r\n \r\n  const RegistrationForm = () => {\r\n    const formik = useFormik({\r\n      initialValues: {\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        tos: false,\r\n      }\r\n     ,\r\n      validate,\r\n\r\n    onSubmit: values => {\r\n      register(values);\r\n      FormReset();\r\n      \r\n      // axios\r\n      // .post('https://reqres.in/api/users', values)\r\n      // .then(res => {\r\n      //   (JSON.stringify(res.data, null, 8))\r\n      //   console.log('success', res)\r\n      //   FormReset();\r\n      // })\r\n      // .catch(err => {\r\n      //   console.log('failed request', err)\r\n      // })\r\n     }} \r\n    )\r\n\r\n    const FormReset = () => {\r\n      Array.from(document.querySelectorAll(\"input\")).forEach(\r\n        input => (input.value = \"\")\r\n      )\r\n      \r\n    }\r\n\r\n   \r\n    return (\r\n      <div className= 'registration-container'>\r\n      <h1>Register Now</h1>\r\n      \r\n      {formik.errors.username ? <div style={{color:'red'}}>{formik.errors.username}</div> : null}\r\n      {formik.errors.password ? <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\r\n      {formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> : null}\r\n      {formik.errors.tos ? <div style={{color: 'red'}}>{formik.errors.tos}</div> : null}\r\n      \r\n     \r\n      <form onSubmit={formik.handleSubmit}>\r\n      <label htmlFor='username'>Username:</label>\r\n      <input\r\n        id='username'\r\n        placeholder='create username'\r\n        name='username'\r\n        type='text'\r\n        style={{width: '300px', marginBottom: '10px', padding: '12px'}}\r\n        onChange={formik.handleChange}\r\n        value={formik.values.username}\r\n      />\r\n       \r\n \r\n      <label htmlFor='password'>Password:</label>\r\n      <input\r\n        id='password'\r\n        placeholder='create password'\r\n        name='password'\r\n        type='password'\r\n        style={{width: '300px', marginBottom: '10px', padding: '12px'}}\r\n        onChange={formik.handleChange}\r\n        value={formik.values.password}\r\n      />\r\n       \r\n \r\n      <label htmlFor='email'>Email:</label>\r\n      <input\r\n        id='email'\r\n        placeholder='enter email address'\r\n        name='email'\r\n        type='email'\r\n        style={{width: '300px', marginBottom: '10px', padding: '12px'}}\r\n        onChange={formik.handleChange}\r\n        value={formik.values.email}\r\n      />\r\n      \r\n      <div className='tos'>\r\n      <label htmlFor='tos'>I accept the terms of service</label>\r\n      <input\r\n        id='tos'\r\n        name='tos'\r\n        type='checkbox'\r\n        onChange={formik.handleChange}\r\n        value={formik.values.tos} \r\n      />\r\n  </div>\r\n       \r\n      <button className='login-button' type='submit'>Submit</button>\r\n       \r\n      <Link to='/login' style={{textDecoration:'none'}}> \r\n      \r\n      <button className='login-button' type='button'>Login</button>\r\n    \r\n      </Link>\r\n\r\n      <p style={{fontStyle:'italic', fontWeight:'bold'}}>Already have an account?</p>\r\n     \r\n    </form>\r\n  </div>\r\n     \r\n  );\r\n };\r\n\r\n\r\n export default connect({register})(RegistrationForm);","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\utils\\PrivateRoute.js",[],"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\RecipeList.js",["89","90"],"import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport RecipeListCard from \"./RecipeListCard\";\r\nimport HeroImage from \"../images/HeroImage.png\";\r\nimport {listRecipes} from \"../actions/RecipeActions\";\r\n\r\nfunction RecipeList(state) {\r\n\r\n    const recipeList = useSelector((state) => state.listRecipes)\r\n    console.log(recipeList);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listRecipes())\r\n    }, [dispatch])\r\n\r\n    const findRecipe = () => {\r\n        console.log(\"clicked\");\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"recipeList\">\r\n            <img className=\"hero\" src={HeroImage} alt=\"Hero Image\"/>\r\n            <div className=\"recipeList__body\">\r\n            <div className=\"recipeList__search\">\r\n                <h3>Search For A Recipe</h3>\r\n                <form onSubmit={findRecipe}>\r\n                    <input type=\"text\" placeholder=\"placeholder text\"/>\r\n                    <button type=\"submit\">test</button>\r\n                </form>\r\n                <h3>Filter recipes by type</h3>\r\n                \r\n            </div>\r\n            <div className=\"recipeList__content\">\r\n                {/* {recipes.map(recipe => {\r\n                    return <RecipeListCard key={recipe.id} title={recipe.title} source={recipe.source} photo={recipe.photo} type={recipe.type} />\r\n                })} */}\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default RecipeList;\r\n","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\Login.js",["91","92","93"],"import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom'; \r\nimport { login } from '../actions/UserActions';\r\n\r\n\r\nconst validate = values => {\r\n  const errors = {};\r\n \r\n    if (!values.username) {\r\n    errors.username = 'username required';\r\n    } else if (values.username.length < 6) {\r\n    errors.username = 'Username must be at least 6 characters';\r\n    }\r\n \r\n    if (!values.password) {\r\n      errors.password = 'password required';\r\n    } else if (values.password.length < 6) {\r\n      errors.password = 'Password must be at least 6 characters';\r\n    }\r\n \r\n   return errors;\r\n };\r\n \r\nconst LoginForm = (props) => {\r\n\r\n  const userLogin = useSelector((state) => state.login);\r\n  const {userInfo, loading, error} = userLogin;\r\n\r\n  const history = useHistory()\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: '',\r\n      password: '',\r\n     }\r\n     ,\r\n      validate,\r\n      \r\n      onSubmit: async(values) => {\r\n        console.log(values)\r\n        await dispatch(login(values.username, values.password))\r\n        history.push(\"/recipes\")\r\n        FormReset();\r\n\r\n      // axios\r\n      // .post('https://reqres.in/api/users', values)\r\n      // .then(res => {\r\n      //     (JSON.stringify(res.data, null, 8))\r\n      //     console.log('success', res)\r\n      //     FormReset()\r\n          \r\n          \r\n      // })\r\n      // .catch(err => {\r\n      //   console.log('failed request', err)\r\n      // })\r\n     }}\r\n     )\r\n\r\n     const FormReset = () => {\r\n      Array.from(document.querySelectorAll(\"input\")).forEach(\r\n        input => (input.value = \"\"))\r\n      \r\n    }\r\n\r\n   \r\n    return (\r\n      <div className= 'login-container'>\r\n      <h1>Sign In</h1>\r\n      \r\n      {formik.errors.username ? <div style={{color: 'red'}}>{formik.errors.username}</div> : null}\r\n      {formik.errors.password ? <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\r\n      \r\n      <form onSubmit={formik.handleSubmit}>\r\n      <label htmlFor='username'>Username:</label>\r\n      <input\r\n        id='username'\r\n        placeholder='enter username'\r\n        name='username'\r\n        type='text'\r\n        style={{width: '300px', marginBottom: '10px', padding: '12px'}}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.username}\r\n      />\r\n \r\n      <label htmlFor='password'>Password:</label>\r\n      <input\r\n        id='password'\r\n        placeholder='enter password'\r\n        name='password'\r\n        type='password'\r\n        style={{width: '300px', marginBottom: '50px', padding: '12px'}}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.password}\r\n      />\r\n       \r\n       \r\n\r\n      <button className='login-button' type='submit'>Log In</button>\r\n\r\n      <Link to='/register' style={{textDecoration:'none'}}>\r\n        \r\n      <button className='login-button' type='button'>Register</button>\r\n      \r\n      </Link>\r\n\r\n      <p style={{fontStyle:'italic', fontWeight:'bold'}}>Need to register?</p>\r\n\r\n    </form>\r\n  </div>\r\n  );\r\n };\r\n\r\n\r\n export default LoginForm;","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\data.js",[],["94","95"],"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\RecipeListCard.js",["96"],"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\reducers\\recipeReducer.js",[],"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\reducers\\userReducer.js",[],"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\constants\\recipeConstants.js",[],"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\constants\\userConstants.js",[],"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\actions\\UserActions.js",[],"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\actions\\RecipeActions.js",["97","98"],"import axiosWithAuth from \"../utils/axiosWithAuth\";\r\nimport * as actions from \"../constants/recipeConstants\";\r\nimport axios from \"axios\";\r\n\r\n// gets a list of all recipes\r\nexport const listRecipes = () => (dispatch) => {\r\n    dispatch({type: actions.FETCH_RECIPES_REQUEST});\r\n        axiosWithAuth().get(\"/recipes\")\r\n        .then (res => {\r\n            dispatch({type: actions.FETCH_RECIPES_SUCCESS, payload: res.data})\r\n        }).catch(error => dispatch({type: actions.FETCH_RECIPES_FAILURE, payload: error.message}))\r\n        \r\n   \r\n}\r\n\r\n// Gets a specific recipe by id\r\nexport const recipeDetails = (id) => (dispatch) => {\r\n    dispatch({type: actions.FETCH_RECIPE_REQUEST});\r\n    axiosWithAuth().get(`/recipes/${id}`)\r\n    .then(res => dispatch({type: actions.FETCH_RECIPE_SUCCESS, payload: res})) \r\n    .catch((error) => {\r\n        dispatch({type: actions.FETCH_RECIPE_FAILURE,\r\n            payload:\r\n                error.resposne && error.response.message\r\n                ? error.response.message\r\n                : error.message\r\n        }) \r\n    })\r\n}\r\n\r\n// Adds a new recipe \r\n// export const addNewRecipe = (recipe) => async (dispatch) => {\r\n//     dispatch({type: actions.ADD_RECIPE_REQUEST});\r\n//     try {\r\n//         const {data} = await axiosWithAuth().post(\"/recipes\", recipe);\r\n//         dispatch({type: actions.ADD_RECIPE_SUCCESS, payload: data});\r\n//     } catch(error) {\r\n//         dispatch({type: actions.ADD_RECIPE_FAILURE,\r\n//             payload:\r\n//                 error.resposne && error.response.message\r\n//                 ? error.response.message\r\n//                 : error.message\r\n//             }) \r\n//     }\r\n// }\r\n\r\nexport const addNewRecipe = (recipe) => (dispatch) => {\r\n    dispatch({type: actions.ADD_RECIPE_REQUEST});\r\n    axiosWithAuth().post(\"/recipes\", {\r\n        \"notes\" : recipe.photo,\r\n        \"title\" : recipe.title,\r\n        \"source\" : recipe.source,\r\n        \"categories\" : recipe.categories,\r\n        \"ingredients\" : recipe.ingredients,\r\n        \"instructions\" : recipe.instructions\r\n    }) .then ((res) => dispatch({type: actions.ADD_RECIPE_SUCCESS, payload: res.message}))\r\n    .catch((error) => {\r\n        dispatch({type: actions.ADD_RECIPE_FAILURE,\r\n            payload:\r\n                error.resposne && error.response.message\r\n                ? error.response.message\r\n                : error.message})\r\n    })\r\n}\r\n\r\n// // // Updates an existing recipe\r\n// // export const updateRecipe = (title, source, type, ingredients, instructions) => async (dispatch) => {\r\n// //     dispatch({type: actions.UPDATE_RECIPE_REQUEST});\r\n// //     try {\r\n// //         const {data} = await axiosWithAuth.put(`/recipes/${id}`, { // change to `/recipes/:${id}` if unsuccessful\r\n// //             ingredients,\r\n// //             instructions\r\n// //         });\r\n// //         dispatch({type: actions.UPDATE_RECIPE_SUCCESS, payload: data});\r\n// //     } catch(error) {\r\n// //         dispatch({type: actions.ADD_RECIPE_FAILURE,\r\n// //             payload:\r\n// //                 error.resposne && error.response.message\r\n// //                 ? error.response.message\r\n// //                 : error.message\r\n// //             }) \r\n// //     }\r\n// // }\r\n\r\n // Deletes a recipe\r\nexport const deleteRecipe = (id) => (dispatch) => {\r\n    dispatch({type: actions.DELETE_RECIPE_REQUEST});\r\n    axiosWithAuth.delete(`/recipes/${id}`)\r\n    .then((res) => dispatch({type: actions.DELETE_RECIPE_SUCCESS, payload: res}))\r\n    .catch((error) => {\r\n        dispatch({type: actions.DELETE_RECIPE_FAILURE,\r\n            payload:\r\n                error.resposne && error.response.message\r\n                ? error.response.message\r\n                : error.message\r\n        })\r\n    })\r\n}","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\utils\\axiosWithAuth.js",[],"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\AddRecipe.js",["99"],"import React, { useState } from 'react';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport { addNewRecipe } from '../actions/RecipeActions';\r\nimport { useHistory } from 'react-router-dom'; \r\nimport './AddRecipe.css';\r\n\r\nconst initialState = {\r\n  title: '',\r\n  source: '',\r\n  ingredients: '',\r\n  instructions: '',\r\n  photo: '',\r\n  categories: [3]\r\n};\r\n\r\nconst AddRecipe = () => {\r\n\r\n  const history = useHistory()\r\n\r\n  const addRecipe = useSelector((state) => console.log(state))\r\n  const [formState, setFormState] = useState({\r\n    title: '',\r\n    source: '',\r\n    ingredients: '',\r\n    instructions: '',\r\n    photo: '',\r\n    categories: [5]\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChanges = e => {\r\n    e.persist();\r\n    setFormState({ ...formState, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const submitForm = async(e) => {\r\n    e.preventDefault();\r\n    console.log(formState)\r\n    await dispatch(addNewRecipe(formState))\r\n    setFormState(initialState);\r\n    history.push(\"/recipes\")\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className='add-div'>\r\n      <h2 className='add-header'>New Recipe</h2>\r\n      <form onSubmit={submitForm} className='add-form'>\r\n        <input\r\n          type='text'\r\n          name='title'\r\n          className='add-form-fields'\r\n          id='add-title'\r\n          placeholder='Title'\r\n          value={formState.title}\r\n          onChange={handleChanges}\r\n        />\r\n        <input\r\n          type='text'\r\n          name='photo'\r\n          className='add-form-fields'\r\n          id='add-photo'\r\n          placeholder='photo URL'\r\n          value={formState.photo}\r\n          onChange={handleChanges}\r\n        />\r\n        <input\r\n          type='text'\r\n          name='source'\r\n          className='add-form-fields'\r\n          id='add-source'\r\n          placeholder='Source'\r\n          value={formState.source}\r\n          onChange={handleChanges}\r\n        />\r\n        <textarea\r\n          type='textarea'\r\n          name='ingredients'\r\n          className='add-form-fields'\r\n          placeholder='Ingredients'\r\n          value={formState.ingredients}\r\n          onChange={handleChanges}\r\n        />\r\n        <textarea\r\n          type='textarea'\r\n          name='instructions'\r\n          className='add-form-fields'\r\n          placeholder='Instructions'\r\n          value={formState.instructions}\r\n          onChange={handleChanges}\r\n        />\r\n        <select name='category' className='add-form-fields' id='category' >\r\n          <option disabled selected>--Select a Category--</option>\r\n          <option value='Breakfast'>Breakfast</option>\r\n          <option value='Lunch'>Lunch</option>\r\n          <option value='Dinner'>Dinner</option>\r\n          <option value='Dessert'>Dessert</option>\r\n        </select>\r\n        <button className='add-form-fields' id='add-button'>Save Recipe</button>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default AddRecipe;","C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\store.js",[],"C:\\Users\\bmmar\\Lambda Projects\\3 - Web Applications II\\Build Week\\front-end\\front-end\\src\\components\\RecipeCard.js",["100","101","102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":13},{"ruleId":"107","severity":1,"message":"108","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":13},{"ruleId":"107","severity":1,"message":"111","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":22},{"ruleId":"112","severity":1,"message":"113","line":25,"column":13,"nodeType":"114","endLine":25,"endColumn":69},{"ruleId":"107","severity":1,"message":"115","line":29,"column":10,"nodeType":"109","messageId":"110","endLine":29,"endColumn":18},{"ruleId":"107","severity":1,"message":"116","line":29,"column":20,"nodeType":"109","messageId":"110","endLine":29,"endColumn":27},{"ruleId":"107","severity":1,"message":"117","line":29,"column":29,"nodeType":"109","messageId":"110","endLine":29,"endColumn":34},{"ruleId":"103","replacedBy":"118"},{"ruleId":"105","replacedBy":"119"},{"ruleId":"112","severity":1,"message":"113","line":11,"column":13,"nodeType":"114","endLine":11,"endColumn":51},{"ruleId":"107","severity":1,"message":"108","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":49,"column":5,"nodeType":"122","messageId":"123","endLine":56,"endColumn":13,"fix":"124"},{"ruleId":"107","severity":1,"message":"108","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":13},{"ruleId":"107","severity":1,"message":"125","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":15,"column":15,"nodeType":"128","endLine":17,"endColumn":6},{"ruleId":"112","severity":1,"message":"113","line":35,"column":17,"nodeType":"114","endLine":35,"endColumn":67},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'RecipeListCard' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'userInfo' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.",["129"],["130"],"no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"131","text":"132"},"'useState' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation",[2047,2049],"."]