[{"C:\\Users\\davaz\\git\\front-end\\front-end\\src\\index.js":"1","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\App.js":"2","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\components\\RecipeCard.js":"3","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\components\\data.js":"4","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\components\\Login.js":"5","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\components\\Registration.js":"6","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\components\\UpdateRecipe.js":"7","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\components\\RecipeList.js":"8","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\utils\\PrivateRoute.js":"9","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\reducers\\userReducer.js":"10","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\reducers\\recipeReducer.js":"11","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\actions\\RecipeActions.js":"12","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\actions\\UserActions.js":"13","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\components\\RecipeListCard.js":"14","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\constants\\recipeConstants.js":"15","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\constants\\userConstants.js":"16","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\utils\\axiosWithAuth.js":"17"},{"size":252,"mtime":1612483211831,"results":"18","hashOfConfig":"19"},{"size":480,"mtime":1612483940450,"results":"20","hashOfConfig":"19"},{"size":1242,"mtime":1612232238718,"results":"21","hashOfConfig":"19"},{"size":8337,"mtime":1612228442397,"results":"22","hashOfConfig":"19"},{"size":2781,"mtime":1612483211827,"results":"23","hashOfConfig":"19"},{"size":3951,"mtime":1612483211830,"results":"24","hashOfConfig":"19"},{"size":3100,"mtime":1612483211830,"results":"25","hashOfConfig":"19"},{"size":1203,"mtime":1612483211828,"results":"26","hashOfConfig":"19"},{"size":434,"mtime":1611808238919,"results":"27","hashOfConfig":"19"},{"size":995,"mtime":1612322730415,"results":"28","hashOfConfig":"19"},{"size":2529,"mtime":1612322730414,"results":"29","hashOfConfig":"19"},{"size":3354,"mtime":1612322730412,"results":"30","hashOfConfig":"19"},{"size":1438,"mtime":1612322730412,"results":"31","hashOfConfig":"19"},{"size":499,"mtime":1612483211829,"results":"32","hashOfConfig":"19"},{"size":929,"mtime":1612322730413,"results":"33","hashOfConfig":"19"},{"size":362,"mtime":1612322730413,"results":"34","hashOfConfig":"19"},{"size":253,"mtime":1611808238919,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"15unixz",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\davaz\\git\\front-end\\front-end\\src\\index.js",[],["79","80"],"C:\\Users\\davaz\\git\\front-end\\front-end\\src\\App.js",["81","82"],"C:\\Users\\davaz\\git\\front-end\\front-end\\src\\components\\RecipeCard.js",["83"],"import React from 'react';\r\nimport data from \"./data\";\r\n\r\nfunction RecipeCard() {\r\n\r\n\r\n    const recipe = data[1];\r\n    console.log(recipe);\r\n\r\n    return (\r\n        <div className=\"recipeCard\">\r\n            <div className=\"recipeCard__top\">\r\n                <div className={recipe.type}>\r\n                    <h2>{recipe.type}</h2>\r\n                </div>\r\n                <h1>{recipe.title}</h1>\r\n            </div>\r\n            <div className=\"recipeCard__body\">\r\n                <img src={recipe.photo} alt=\"recipe photo\"/>\r\n                <div className=\"recipeCard__body__info\">\r\n                    <h3>Ingredients</h3>\r\n                    {recipe.ingredients.map(ingredient => {\r\n                        return <p>{ingredient}</p>\r\n                    })}\r\n                    <h3>Instructions</h3>\r\n                    {recipe.instructions.map(step => {\r\n                        return (\r\n                            <div className=\"recipeCard__body_step\">\r\n                                <p><strong>{step.step})</strong> {step.instructions}</p>\r\n                            </div>\r\n                    )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeCard\r\n",["84","85"],"C:\\Users\\davaz\\git\\front-end\\front-end\\src\\components\\data.js",[],"C:\\Users\\davaz\\git\\front-end\\front-end\\src\\components\\Login.js",[],"C:\\Users\\davaz\\git\\front-end\\front-end\\src\\components\\Registration.js",["86"],"import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { register } from '../actions/UserActions';\r\n\r\n\r\nconst validate = values => {\r\n  const errors = {};\r\n \r\n    if (!values.username) {\r\n      errors.username = 'username required';\r\n    } else if (values.username.length < 6) {\r\n      errors.username = 'Username must be at least 6 characters';\r\n    }\r\n \r\n    if (!values.password) {\r\n      errors.password = 'password required';\r\n    } else if (values.password.length < 6) {\r\n      errors.password = 'Password must be at least 6 characters';\r\n    }\r\n \r\n    if (!values.email) {\r\n      errors.email = 'email required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n      errors.email = 'Invalid email address';\r\n    }\r\n\r\n    if (!values.tos) {\r\n      errors.tos = 'You must accept the terms of service';\r\n    } else if (values.tos.boolean === false) {\r\n      errors.tos = '';\r\n    }\r\n \r\n   return errors;\r\n}\r\n \r\n  const RegistrationForm = () => {\r\n    const formik = useFormik({\r\n      initialValues: {\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        tos: false,\r\n      }\r\n     ,\r\n      validate,\r\n\r\n    onSubmit: values => {\r\n      register(values);\r\n      FormReset();\r\n      \r\n      // axios\r\n      // .post('https://reqres.in/api/users', values)\r\n      // .then(res => {\r\n      //   (JSON.stringify(res.data, null, 8))\r\n      //   console.log('success', res)\r\n      //   FormReset();\r\n      // })\r\n      // .catch(err => {\r\n      //   console.log('failed request', err)\r\n      // })\r\n     }} \r\n    )\r\n\r\n    const FormReset = () => {\r\n      Array.from(document.querySelectorAll(\"input\")).forEach(\r\n        input => (input.value = \"\")\r\n      )\r\n      \r\n    }\r\n\r\n   \r\n    return (\r\n      <div className= 'registration-container'>\r\n      <h1>Register Now</h1>\r\n      \r\n      {formik.errors.username ? <div style={{color:'red'}}>{formik.errors.username}</div> : null}\r\n      {formik.errors.password ? <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\r\n      {formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> : null}\r\n      {formik.errors.tos ? <div style={{color: 'red'}}>{formik.errors.tos}</div> : null}\r\n      \r\n     \r\n      <form onSubmit={formik.handleSubmit}>\r\n      <label htmlFor='username'>Username:</label>\r\n      <input\r\n        id='username'\r\n        placeholder='create username'\r\n        name='username'\r\n        type='text'\r\n        style={{width: '300px', marginBottom: '10px', padding: '12px'}}\r\n        onChange={formik.handleChange}\r\n        value={formik.values.username}\r\n      />\r\n       \r\n \r\n      <label htmlFor='password'>Password:</label>\r\n      <input\r\n        id='password'\r\n        placeholder='create password'\r\n        name='password'\r\n        type='password'\r\n        style={{width: '300px', marginBottom: '10px', padding: '12px'}}\r\n        onChange={formik.handleChange}\r\n        value={formik.values.password}\r\n      />\r\n       \r\n \r\n      <label htmlFor='email'>Email:</label>\r\n      <input\r\n        id='email'\r\n        placeholder='enter email address'\r\n        name='email'\r\n        type='email'\r\n        style={{width: '300px', marginBottom: '10px', padding: '12px'}}\r\n        onChange={formik.handleChange}\r\n        value={formik.values.email}\r\n      />\r\n      \r\n      <div className='tos'>\r\n      <label htmlFor='tos'>I accept the terms of service</label>\r\n      <input\r\n        id='tos'\r\n        name='tos'\r\n        type='checkbox'\r\n        onChange={formik.handleChange}\r\n        value={formik.values.tos} \r\n      />\r\n  </div>\r\n       \r\n      <button className='login-button' type='submit'>Submit</button>\r\n       \r\n      <Link to='/login' style={{textDecoration:'none'}}> \r\n      \r\n      <button className='login-button' type='button'>Login</button>\r\n    \r\n      </Link>\r\n\r\n      <p style={{fontStyle:'italic', fontWeight:'bold'}}>Already have an account?</p>\r\n     \r\n    </form>\r\n  </div>\r\n     \r\n  );\r\n };\r\n\r\n\r\n export default connect({register})(RegistrationForm);","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\components\\UpdateRecipe.js",["87","88"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { listRecipes, updateRecipe } from '../actions/RecipeActions';\r\nimport './UpdateRecipe.css';\r\n\r\nconst initialState = {\r\n  title: '',\r\n  source: '',\r\n  ingredients: '',\r\n  instructions: '',\r\n  category: ''\r\n};\r\n\r\nconst UpdateRecipe = () => {\r\n  const [formState, setFormState] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    listRecipes();\r\n  }, []);\r\n\r\n  const handleChanges = e => {\r\n    e.persist();\r\n    setFormState({ ...formState, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const submitForm = e => {\r\n    e.preventDefault();\r\n    updateRecipe();\r\n    setFormState(initialState);\r\n  };\r\n\r\n  return (\r\n    <div className='update-div'>\r\n      <h2 className='update-header'>Update Recipe</h2>\r\n      <form onSubmit={submitForm} className='update-form'>\r\n        <input\r\n          type='text'\r\n          name='title'\r\n          className='update-form-fields'\r\n          id='update-title'\r\n          placeholder='Title'\r\n          value={formState.title}\r\n          onChange={handleChanges}\r\n        />\r\n        <input\r\n          type='text'\r\n          name='source'\r\n          className='update-form-fields'\r\n          id='update-source'\r\n          placeholder='Source'\r\n          value={formState.source}\r\n          onChange={handleChanges}\r\n        />\r\n        <textarea\r\n          type='textarea'\r\n          name='ingredients'\r\n          className='update-form-fields'\r\n          placeholder='Ingredients'\r\n          value={formState.ingredients}\r\n          onChange={handleChanges}\r\n        />\r\n        <textarea\r\n          type='textarea'\r\n          name='instructions'\r\n          className='update-form-fields'\r\n          placeholder='Instructions'\r\n          value={formState.instructions}\r\n          onChange={handleChanges}\r\n        />\r\n        <select name='category' className='update-form-fields' id='category' >\r\n          <option disabled selected>--Select a Category--</option>\r\n          <option value='Breakfast'>Breakfast</option>\r\n          <option value='Lunch'>Lunch</option>\r\n          <option value='Dinner'>Dinner</option>\r\n          <option value='Dessert'>Dessert</option>\r\n          <option value='Gluten Free'>Gluten Free</option>\r\n          <option value='Vegetarian'>Vegetarian</option>\r\n        </select>\r\n        <button className='update-form-fields' id='update-button'>Save Edits</button>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default connect({ listRecipes, updateRecipe })(UpdateRecipe);","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\components\\RecipeList.js",["89","90"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { recipeDetails } from '../actions/RecipeActions';\r\n// import data from \"./data\";\r\nimport RecipeListCard from \"./RecipeListCard\";\r\nimport HeroImage from \"../images/HeroImage.png\";\r\n\r\nfunction RecipeList() {\r\n\r\n    // const mockApiCall = data;\r\n\r\n    const findRecipe = () => {\r\n        console.log(\"clicked\");\r\n        recipeDetails(); //is this meant to be here?\r\n    }\r\n\r\n    return (\r\n        <div className=\"recipeList\">\r\n            <img className=\"hero\" src={HeroImage} alt=\"Hero Image\"/>\r\n            <div className=\"recipeList__body\">\r\n            <div className=\"recipeList__search\">\r\n                <h3>Search For A Recipe</h3>\r\n                <form onSubmit={findRecipe}>\r\n                    <input type=\"text\" placeholder=\"placeholder text\"/>\r\n                    <button type=\"submit\">test</button>\r\n                </form>\r\n                <h3>Filter recipes by type</h3>\r\n                \r\n            </div>\r\n            <div className=\"recipeList__content\">\r\n                {props.recipes.map(recipe => {\r\n                    return <RecipeListCard key={recipe.id} title={recipe.title} source={recipe.source} photo={recipe.photo} type={recipe.type} />\r\n                })}\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        recipes: state.recipes\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(RecipeList);\r\n",["91","92"],"C:\\Users\\davaz\\git\\front-end\\front-end\\src\\utils\\PrivateRoute.js",[],"C:\\Users\\davaz\\git\\front-end\\front-end\\src\\reducers\\userReducer.js",[],"C:\\Users\\davaz\\git\\front-end\\front-end\\src\\reducers\\recipeReducer.js",[],"C:\\Users\\davaz\\git\\front-end\\front-end\\src\\actions\\RecipeActions.js",["93","94","95"],"import axiosWithAuth from \"../utils/axiosWithAuth\";\r\nimport * as actions from \"../constants/recipeConstants\";\r\n\r\n// gets a list of all recipes\r\nexport const listRecipes = () => async (dispatch) => {\r\n    dispatch({type: actions.FETCH_RECIPES_REQUEST});\r\n    try {\r\n        const {data} = await axiosWithAuth.get(\"/recipes\");\r\n        dispatch({type: actions.FETCH_RECIPES_SUCCESS, payload: data});\r\n    } catch(error) {\r\n        dispatch({type: actions.FETCH_RECIPES_FAILURE,\r\n        payload:\r\n            error.resposne && error.response.message\r\n            ? error.response.message\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// Gets a specific recipe by id\r\nexport const recipeDetails = (id) = async (dispatch) => {\r\n    dispatch({type: actions.FETCH_RECIPE_REQUEST});\r\n    try {\r\n        const {data} = await axiosWithAuth.get(`/recipes/${id}`) // change to `/recipes/:${id}` if unsuccessful\r\n        dispatch({type: actions.FETCH_RECIPE_SUCCESS, payload: data});\r\n    } catch(error) {\r\n        dispatch({type: actions.FETCH_RECIPE_FAILURE,\r\n            payload:\r\n                error.resposne && error.response.message\r\n                ? error.response.message\r\n                : error.message\r\n            }) \r\n    }\r\n}\r\n\r\n// Adds a new recipe \r\nexport const addNewRecipe = (id, user_id, title, source, type, photo, ingredients, instructions) => async (dispatch) => {\r\n    dispatch({type: actions.ADD_RECIPE_REQUEST});\r\n    try {\r\n        const {data} = await axiosWithAuth.post(\"/recipes\", {\r\n            id,\r\n            user_id,\r\n            title,\r\n            source,\r\n            type,\r\n            photo,\r\n            ingredients,\r\n            instructions\r\n        });\r\n        dispatch({type: actions.ADD_RECIPE_SUCCESS, payload: data});\r\n    } catch(error) {\r\n        dispatch({type: actions.ADD_RECIPE_FAILURE,\r\n            payload:\r\n                error.resposne && error.response.message\r\n                ? error.response.message\r\n                : error.message\r\n            }) \r\n    }\r\n}\r\n\r\n// Updates an existing recipe\r\nexport const updateRecipe = (id, title, source, ingredients, instructions) => async (dispatch) => {\r\n    dispatch({type: actions.UPDATE_RECIPE_REQUEST});\r\n    try {\r\n        const {data} = await axiosWithAuth.put(`/recipes/${id}`, { // change to `/recipes/:${id}` if unsuccessful\r\n            id,\r\n            user_id,\r\n            title,\r\n            source,\r\n            ingredients,\r\n            instructions\r\n        });\r\n        dispatch({type: actions.UPDATE_RECIPE_SUCCESS, payload: data});\r\n    } catch(error) {\r\n        dispatch({type: actions.ADD_RECIPE_FAILURE,\r\n            payload:\r\n                error.resposne && error.response.message\r\n                ? error.response.message\r\n                : error.message\r\n            }) \r\n    }\r\n}\r\n\r\n// Deletes a recipe\r\nexport const deleteRecipe = (id) => async (dispatch) => {\r\n    dispatch({type: actions.DELETE_RECIPE_REQUEST});\r\n    try {\r\n        const {data} = axiosWithAuth.delete(`/recipes/${id}`);\r\n        dispatch({type: actions.DELETE_RECIPE_SUCCESS, payload: data});\r\n    } catch(error) {\r\n        dispatch({type: actions.DELETE_RECIPE_FAILURE,\r\n            payload:\r\n                error.resposne && error.response.message\r\n                ? error.response.message\r\n                : error.message\r\n            })\r\n    }\r\n}","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\actions\\UserActions.js",[],"C:\\Users\\davaz\\git\\front-end\\front-end\\src\\components\\RecipeListCard.js",["96"],"import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { recipeDetails } from '../actions/RecipeActions'\r\n\r\nfunction RecipeListCard({title, source, photo, type}) {\r\n    \r\n    return (\r\n        <div className=\"RecipeListCard\">\r\n            <img src={photo} alt=\"Recipe Photo\" />\r\n            <div className=\"RecipeListCard__details\">\r\n                <h3>{source}</h3>\r\n                <p>{type}</p>\r\n            </div>\r\n            <h2>{title}</h2>\r\n            <button className=\"recipe_details\" onClick={() => recipeDetails()}>View Recipe</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect({ recipeDetails })(RecipeListCard)\r\n","C:\\Users\\davaz\\git\\front-end\\front-end\\src\\constants\\recipeConstants.js",[],"C:\\Users\\davaz\\git\\front-end\\front-end\\src\\constants\\userConstants.js",[],"C:\\Users\\davaz\\git\\front-end\\front-end\\src\\utils\\axiosWithAuth.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":20},{"ruleId":"101","severity":1,"message":"105","line":7,"column":26,"nodeType":"103","messageId":"104","endLine":7,"endColumn":32},{"ruleId":"106","severity":1,"message":"107","line":19,"column":17,"nodeType":"108","endLine":19,"endColumn":61},{"ruleId":"97","replacedBy":"109"},{"ruleId":"99","replacedBy":"110"},{"ruleId":"101","severity":1,"message":"111","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":13},{"ruleId":"101","severity":1,"message":"112","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":19},{"ruleId":"101","severity":1,"message":"113","line":3,"column":21,"nodeType":"103","messageId":"104","endLine":3,"endColumn":31},{"ruleId":"106","severity":1,"message":"107","line":19,"column":13,"nodeType":"108","endLine":19,"endColumn":69},{"ruleId":"114","severity":2,"message":"115","line":31,"column":18,"nodeType":"103","messageId":"116","endLine":31,"endColumn":23},{"ruleId":"97","replacedBy":"117"},{"ruleId":"99","replacedBy":"118"},{"ruleId":"114","severity":2,"message":"119","line":21,"column":31,"nodeType":"103","messageId":"116","endLine":21,"endColumn":33},{"ruleId":"114","severity":2,"message":"119","line":24,"column":60,"nodeType":"103","messageId":"116","endLine":24,"endColumn":62},{"ruleId":"114","severity":2,"message":"120","line":67,"column":13,"nodeType":"103","messageId":"116","endLine":67,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":9,"column":13,"nodeType":"108","endLine":9,"endColumn":51},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'UpdateRecipe' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["121"],["122"],"'axios' is defined but never used.","'useParams' is defined but never used.","'useHistory' is defined but never used.","no-undef","'props' is not defined.","undef",["121"],["122"],"'id' is not defined.","'user_id' is not defined.","no-global-assign","no-unsafe-negation"]